#version 430

smooth in vec3 normal;
smooth in vec3 eyeDir;

out vec4 color;

const vec3 light = vec3(1,1,1);

const vec3 ambient = vec3(0.2, 0.0, 0.0);
const vec3 diffuse = vec3(0.4, 0.0, 0.0);
const vec3 specular = vec3(0.7, 0.7, 0.7);
const float specularExp = 20;

void main() 
{
	vec3 lightDir = -normalize(light);
	vec3 reflected = reflect(lightDir, normal);
	color = vec4(ambient + (clamp(dot(normal, lightDir), 0, 1) * diffuse) + (pow(clamp(dot(reflected, eyeDir), 0, 1), specularExp) * specular), 1);
	//color = vec4((normal + 1) / 2, 1);
	//color = vec4(1, 0, 0, 1);
}